
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isUserAuthenticated() {
      return request.auth != null && request.auth.uid != null;
    }

    function isUserAdmin() {
      return isUserAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    function isUserGroupMember(groupId) {
      return isUserAuthenticated() && request.auth.uid in get(/databases/$(database)/documents/groups/$(groupId)).data.memberIds;
    }

    function isUserGroupCreator(groupId) {
       return isUserAuthenticated() && request.auth.uid == get(/databases/$(database)/documents/groups/$(groupId)).data.createdById;
    }
    
    match /users/{userId} {
      // Admins can read/write any user profile. Users can only manage their own.
      allow read, write: if isUserAdmin() || (isUserAuthenticated() && request.auth.uid == userId);
    }
    
    match /groups/{groupId} {
      // Read: Admins or members of the group can read.
      allow read: if isUserAdmin() || isUserGroupMember(groupId);
      
      // Create: Any authenticated user can create a group (rules on data integrity below).
      allow create: if isUserAuthenticated()
                    && request.resource.data.createdById == request.auth.uid
                    && request.auth.uid in request.resource.data.memberIds;
      
      // Update: Admins can update any group. The group creator can also update.
      // Business logic (like checking for settled balances) is handled in server-side actions.
      allow update: if isUserAdmin() || isUserGroupCreator(groupId);

      // Delete: Only admins can permanently delete a group record.
      allow delete: if isUserAdmin();
    }
    
    match /expenses/{expenseId} {
        // Read: Admins can read. Members of the expense's group can read.
        allow read: if isUserAdmin() || isUserGroupMember(resource.data.groupId);

        // Create: A user must be a member of the group to add an expense.
        allow create: if isUserGroupMember(request.resource.data.groupId);

        // Update, Delete: A user must be a member of the group.
        allow update, delete: if isUserGroupMember(resource.data.groupId);
    }

    match /settlements/{settlementId} {
        // Read: Admins or group members can read.
        allow read: if isUserAdmin() || isUserGroupMember(resource.data.groupId);

        // Create, Update, Delete: A user must be a member of the group.
        allow create, update, delete: if isUserGroupMember(request.resource.data.groupId);
    }

    match /history/{historyId} {
        // Read: Admins or group members can read.
        allow read: if isUserAdmin() || isUserGroupMember(resource.data.groupId);
        
        // Create: Only authenticated users can create history (done via backend logic).
        allow create: if isUserAuthenticated();
        
        // Update, Delete: Only admins can modify/delete history records.
        allow update, delete: if isUserAdmin();
    }
  }
}
