
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isSignedIn() {
      return request.auth != null;
    }

    function isUser(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // --- Collections ---
    match /users/{userId} {
      allow read: if isSignedIn();
      allow create: if isUser(userId);
      allow update: if isUser(userId);
      allow delete: if false; // Users cannot delete their own accounts
    }
    
    match /groups/{groupId} {
        // Admins can read any group, members can read their own.
        allow read: if (isSignedIn() && resource.data.memberIds.hasAny([request.auth.uid])) || isAdmin();
        // Only members can update, create.
        allow update: if isSignedIn() && resource.data.memberIds.hasAny([request.auth.uid]);
        allow create: if isSignedIn(); // Checked in app logic
        allow delete: if false; // Groups are archived, not deleted
    }

    match /expenses/{expenseId} {
        // Admins can read any expense, members can read their own.
        allow read: if (isSignedIn() && resource.data.groupMemberIds.hasAny([request.auth.uid])) || isAdmin();
        // Only members can create, update, delete.
        allow create, update, delete: if isSignedIn() && request.resource.data.groupMemberIds.hasAny([request.auth.uid]);
    }
    
    match /settlements/{settlementId} {
        // Admins can read any settlement, members can read their own.
        allow read: if (isSignedIn() && resource.data.groupMemberIds.hasAny([request.auth.uid])) || isAdmin();
        // Only members can create, update, delete.
        allow create, update, delete: if isSignedIn() && request.resource.data.groupMemberIds.hasAny([request.auth.uid]);
    }

    match /history/{historyId} {
        // Admins can read any history, members can read their own.
        allow read: if (isSignedIn() && resource.data.groupMemberIds.hasAny([request.auth.uid])) || isAdmin();
        allow create: if isSignedIn();
        // Allow update only if the user is a member and is only changing the 'restored' field.
        allow update: if (isSignedIn() && resource.data.groupMemberIds.hasAny([request.auth.uid])) && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['restored']);
        // Only admins can delete history events.
        allow delete: if isAdmin();
    }
    
    match /settings/{docId} {
        allow read: if true; // Public settings
        allow write: if isAdmin(); // Only admins can change site settings
    }
  }
}
