
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // --- Helper Functions ---
    function isAuthenticated() {
      return request.auth != null;
    }

    function isUser(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isAdmin() {
      // Check if the user's document in the 'users' collection has role 'admin'.
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isGroupMember(groupId) {
      // Check if the user's UID is in the group's memberIds array.
      let groupData = get(/databases/$(database)/documents/groups/$(groupId)).data;
      return isAuthenticated() && request.auth.uid in groupData.memberIds;
    }

    // --- User Rules ---
    match /users/{userId} {
      allow read: if isAuthenticated();
      // Only the user themselves can create their own document on signup.
      allow create: if isUser(userId);
      // The user can update their own profile, or an admin can.
      allow update: if isUser(userId) || isAdmin();
      // Deletion is disallowed for safety.
      allow delete: if false; 
    }
    
    // --- Group Rules ---
    match /groups/{groupId} {
      allow read: if isGroupMember(groupId) || isAdmin();
      
      // Anyone authenticated can create a group, but they MUST include themselves as a member.
      allow create: if isAuthenticated()
                    && request.resource.data.createdById == request.auth.uid
                    && request.auth.uid in request.resource.data.memberIds;
                    
      // Only members can update the group (e.g. for adding members). Admins can also update.
      allow update: if isGroupMember(groupId) || isAdmin();
      
      // Deletion is disallowed. Archiving is handled via an update.
      allow delete: if false;
    }
    
    // --- Expense Rules ---
    match /expenses/{expenseId} {
        allow read, update, delete: if isGroupMember(resource.data.groupId) || isAdmin();
        allow create: if isGroupMember(request.resource.data.groupId) || isAdmin();
    }
    
    // --- Settlement Rules ---
    match /settlements/{settlementId} {
        allow read, update, delete: if isGroupMember(resource.data.groupId) || isAdmin();
        allow create: if isGroupMember(request.resource.data.groupId) || isAdmin();
    }

    // --- History Rules ---
    match /history/{historyId} {
        allow read, delete: if isGroupMember(resource.data.groupId) || isAdmin();
        allow create: if isGroupMember(request.resource.data.groupId) || isAdmin();
        allow update: if isAdmin(); // only admins should modify history, e.g. marking as restored
    }
    
    // --- Settings Rules ---
    match /settings/{settingId} {
      // Anyone can read the settings (e.g. to get cover images)
      allow read: if true;
      // Only admins can change settings
      allow write: if isAdmin();
    }
  }
}
