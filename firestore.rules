rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper Functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isAdmin() {
      return isSignedIn() && request.auth.token.email == 'jangrayash1505@gmail.com';
    }

    function isMemberOfGroup(groupId) {
      return isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/groups/$(groupId)).data.memberIds;
    }

    // --- Rules ---
    
    match /settings/general {
      allow get: if true;
      allow write: if isAdmin();
    }

    match /users/{userId} {
      allow read: if isSignedIn() || isAdmin();
      allow create: if isSignedIn() || isAdmin();
      allow update: if isOwner(userId) || isAdmin();
    }
    
    match /groups/{groupId} {
      allow read: if isMemberOfGroup(groupId) || isAdmin();
      allow create: if isSignedIn() || isAdmin();
      allow update, delete: if (isMemberOfGroup(groupId) && resource.data.createdById == request.auth.uid) || isAdmin();
    }

    match /expenses/{docId} {
       allow list, read, write, delete: if isMemberOfGroup(request.resource.data.groupId) || isAdmin();
    }
    
    match /settlements/{docId} {
       allow list, read, write, delete: if isMemberOfGroup(request.resource.data.groupId) || isAdmin();
    }
    
    match /history/{docId} {
       allow list, read, write, delete: if isMemberOfGroup(request.resource.data.groupId) || isAdmin();
    }
  }
}
